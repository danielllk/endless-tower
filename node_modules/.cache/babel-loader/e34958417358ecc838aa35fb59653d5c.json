{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\personal\\\\my-projects\\\\endless-tower\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\nimport monsters from \"../data/monsters\";\n\nfunction Game() {\n  _s();\n\n  const playerData = [{\n    id: 1,\n    life: 100,\n    attack: 2,\n    speed: 0,\n    doodge: 0,\n    accuracy: 1,\n    armor: 0\n  }];\n  const [monsterLife, setMonsterLife] = useState(monsters[0].life);\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\n  const [start, setStart] = useState(false);\n  const [playerAttack, setPlayerAttack] = useState(playerData[0].attack);\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\n  const [playerLife, setPlayerLife] = useState(playerData[0].life);\n\n  const calculateMonsterDodgechance = () => {\n    let playerAccuracity = playerData[0].accuracy;\n    let monsterDodge = monsters[0].dodge;\n    let checkDifference;\n\n    if (playerAccuracity < monsterDodge) {\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\n    } else {\n      checkDifference = 1;\n    }\n\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\n    setMonsteerDodgeChance(dodgeChance);\n  };\n\n  const calculatePlayerDodgechance = () => {\n    let monsterAccuracity = monsters[0].accuracy;\n    let playerDodge = playerData[0].dodge;\n    let checkDifferencePlayer;\n\n    if (monsterAccuracity < playerDodge) {\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\n    } else {\n      checkDifferencePlayer = 1;\n    }\n\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\n    setPlayerDodgeChance(dodgeChancePlayer);\n  };\n\n  console.log(monsteerDodgeChance);\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        //monster doodge change calc\n        calculateMonsterDodgechance();\n        calculatePlayerDodgechance();\n\n        if (monsteerDodgeChance === 0) {\n          setMonsterLife(monsterLife => monsterLife - playerAttack);\n          setPlayerAttackAmount(playerData[0].attack);\n        } //player doodge change calc\n\n\n        if (playerDodgeChance === 0) {\n          setPlayerLife(playerLife => playerLife - playerAttack);\n          setPlayerAttackAmount(playerData[0].attack);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    } else {}\n  }, [start, monsteerDodgeChance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fractalMonster\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerAttackAmount\",\n          children: monsteerDodgeChance === 0 ? playerAttackAmount : monsteerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterLifebar\",\n        style: {\n          width: monsterLife + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: monsterLife\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `startButton  ${start ? \"displayNone\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStart(true),\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerLifebar\",\n        style: {\n          width: playerData.Life + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"Rrl7SczJJpEWZ3pgIEptTvuq8fw=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/personal/my-projects/endless-tower/src/components/Game.js"],"names":["React","useState","useEffect","Neptune","monsters","Game","playerData","id","life","attack","speed","doodge","accuracy","armor","monsterLife","setMonsterLife","monsteerDodgeChance","setMonsteerDodgeChance","start","setStart","playerAttack","setPlayerAttack","playerAttackAmount","setPlayerAttackAmount","playerDodgeChance","setPlayerDodgeChance","playerLife","setPlayerLife","calculateMonsterDodgechance","playerAccuracity","monsterDodge","dodge","checkDifference","Math","abs","dodgeChance","floor","random","calculatePlayerDodgechance","monsterAccuracity","playerDodge","checkDifferencePlayer","dodgeChancePlayer","console","log","interval","setInterval","clearInterval","width","Life"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\r\nimport monsters from \"../data/monsters\";\r\n\r\nfunction Game() {\r\n  const playerData = [\r\n    {\r\n      id: 1,\r\n      life: 100,\r\n      attack: 2,\r\n      speed: 0,\r\n      doodge: 0,\r\n      accuracy: 1,\r\n      armor: 0,\r\n    },\r\n  ];\r\n  const [monsterLife, setMonsterLife] = useState(monsters[0].life);\r\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\r\n\r\n  const [start, setStart] = useState(false);\r\n\r\n  const [playerAttack, setPlayerAttack] = useState(playerData[0].attack);\r\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\r\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\r\n  const [playerLife, setPlayerLife] = useState(playerData[0].life);\r\n\r\n  const calculateMonsterDodgechance = () => {\r\n    let playerAccuracity = playerData[0].accuracy;\r\n    let monsterDodge = monsters[0].dodge;\r\n    let checkDifference;\r\n    if (playerAccuracity < monsterDodge) {\r\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\r\n    } else {\r\n      checkDifference = 1;\r\n    }\r\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\r\n    setMonsteerDodgeChance(dodgeChance);\r\n  };\r\n  const calculatePlayerDodgechance = () => {\r\n    let monsterAccuracity = monsters[0].accuracy;\r\n    let playerDodge = playerData[0].dodge;\r\n    let checkDifferencePlayer;\r\n    if (monsterAccuracity < playerDodge) {\r\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\r\n    } else {\r\n      checkDifferencePlayer = 1;\r\n    }\r\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\r\n    setPlayerDodgeChance(dodgeChancePlayer);\r\n  };\r\n  console.log(monsteerDodgeChance);\r\n  useEffect(() => {\r\n    if (start) {\r\n      const interval = setInterval(() => {\r\n        //monster doodge change calc\r\n        calculateMonsterDodgechance();\r\n        calculatePlayerDodgechance();\r\n        if (monsteerDodgeChance === 0) {\r\n          setMonsterLife((monsterLife) => monsterLife - playerAttack);\r\n          setPlayerAttackAmount(playerData[0].attack);\r\n        }\r\n        //player doodge change calc\r\n        if (playerDodgeChance === 0) {\r\n          setPlayerLife((playerLife) => playerLife - playerAttack);\r\n          setPlayerAttackAmount(playerData[0].attack);\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n    }\r\n  }, [start, monsteerDodgeChance]);\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"fractalMonster\">\r\n        <div className=\"monsterAvatar\">\r\n          <img src={Neptune} alt=\"\" />\r\n          <div className=\"playerAttackAmount\">\r\n            {monsteerDodgeChance === 0\r\n              ? playerAttackAmount\r\n              : monsteerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"monsterLifebar\"\r\n          style={{ width: monsterLife + \"%\" }}\r\n        ></div>\r\n        <p>{monsterLife}</p>\r\n      </div>\r\n      <div className={`startButton  ${start ? \"displayNone\" : \"\"}`}>\r\n        <button onClick={() => setStart(true)}>start</button>\r\n      </div>\r\n      <div className=\"player\">\r\n        <div\r\n          className=\"playerLifebar\"\r\n          style={{ width: playerData.Life + \"%\" }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}