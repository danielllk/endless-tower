[{"C:\\personal\\my-projects\\endless-tower\\src\\index.js":"1","C:\\personal\\my-projects\\endless-tower\\src\\App.js":"2","C:\\personal\\my-projects\\endless-tower\\src\\reportWebVitals.js":"3","C:\\personal\\my-projects\\endless-tower\\src\\components\\Intro.js":"4","C:\\personal\\my-projects\\endless-tower\\src\\components\\Game.js":"5","C:\\personal\\my-projects\\endless-tower\\src\\components\\Rules.js":"6","C:\\personal\\my-projects\\endless-tower\\src\\components\\EndGame.js":"7","C:\\personal\\my-projects\\endless-tower\\src\\components\\PlayerSkills.js":"8","C:\\personal\\my-projects\\endless-tower\\src\\components\\NextStage.js":"9","C:\\personal\\my-projects\\endless-tower\\src\\data\\monsters.js":"10","C:\\personal\\my-projects\\endless-tower\\src\\components\\PlayerAttributesStorage.js":"11"},{"size":532,"mtime":1611608880737,"results":"12","hashOfConfig":"13"},{"size":1003,"mtime":1611608880706,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611608880759,"results":"15","hashOfConfig":"13"},{"size":563,"mtime":1612644822917,"results":"16","hashOfConfig":"13"},{"size":8688,"mtime":1612723952348,"results":"17","hashOfConfig":"13"},{"size":5609,"mtime":1612722699826,"results":"18","hashOfConfig":"13"},{"size":705,"mtime":1612721694485,"results":"19","hashOfConfig":"13"},{"size":8758,"mtime":1612659665063,"results":"20","hashOfConfig":"13"},{"size":529,"mtime":1611877452449,"results":"21","hashOfConfig":"13"},{"size":5014,"mtime":1612658842865,"results":"22","hashOfConfig":"13"},{"size":390,"mtime":1611608880891,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1k1thib",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\personal\\my-projects\\endless-tower\\src\\index.js",[],["49","50"],"C:\\personal\\my-projects\\endless-tower\\src\\App.js",[],"C:\\personal\\my-projects\\endless-tower\\src\\reportWebVitals.js",[],"C:\\personal\\my-projects\\endless-tower\\src\\components\\Intro.js",[],"C:\\personal\\my-projects\\endless-tower\\src\\components\\Game.js",["51","52","53"],"C:\\personal\\my-projects\\endless-tower\\src\\components\\Rules.js",["54","55"],"C:\\personal\\my-projects\\endless-tower\\src\\components\\EndGame.js",[],"C:\\personal\\my-projects\\endless-tower\\src\\components\\PlayerSkills.js",["56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport { PlayerAttributesStorage } from \"./PlayerAttributesStorage\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PlayerSkills() {\n  let history = useHistory();\n  const [playerAttack, setPlayerAttack] = PlayerAttributesStorage(\n    \"attack\",\n    localStorage.getItem(\"attack\")\n  );\n  const [playerAgility, setPlayerAgility] = PlayerAttributesStorage(\n    \"agility\",\n    localStorage.getItem(\"agility\")\n  );\n  const [playerDodge, setPlayerDodge] = PlayerAttributesStorage(\n    \"dodge\",\n    localStorage.getItem(\"dodge\")\n  );\n  const [playerVitality, setPlayerVitality] = PlayerAttributesStorage(\n    \"vitality\",\n    localStorage.getItem(\"vitality\")\n  );\n  const [playerRawSpeed, setPlayerRawSpeed] = PlayerAttributesStorage(\n    \"rawSpeed\",\n    localStorage.getItem(\"rawSpeed\")\n  );\n  const [playerSpeed, setPlayerSpeed] = PlayerAttributesStorage(\n    \"speed\",\n    localStorage.getItem(\"speed\")\n  );\n  const [playerAccuracy, setPlayerAccuracy] = PlayerAttributesStorage(\n    \"accuracy\",\n    localStorage.getItem(\"Accuracy\")\n  );\n  const [playerArmor, setPlayerArmor] = PlayerAttributesStorage(\n    \"armor\",\n    localStorage.getItem(\"armor\")\n  );\n  const [availableSkills, setAvailableSkills] = PlayerAttributesStorage(\n    \"availableSkills\",\n    localStorage.getItem(\"availableSkills\")\n  );\n  const [monsterLvl, setMonsterLvl] = PlayerAttributesStorage(\n    \"monsterLvl\",\n    localStorage.getItem(\"monsterLvl\")\n  );\n  const [nextStageDelay, setNextStageDelay] = useState(false);\n  console.log(localStorage);\n\n  const handleAttack = () => {\n    if (availableSkills > 0) {\n      setPlayerAttack(parseInt(playerAttack) + 1);\n      setAvailableSkills(parseInt(availableSkills) - 1);\n    }\n  };\n\n  const handleAttackReturn = () => {\n    if (availableSkills < 3 && availableSkills >= 0) {\n      if (playerAttack > 2) {\n        setPlayerAttack(parseInt(playerAttack) - 1);\n        setAvailableSkills(parseInt(availableSkills) + 1);\n      }\n    }\n  };\n\n  const handleLife = () => {\n    if (availableSkills > 0) {\n      setPlayerVitality(parseInt(playerVitality) + 1);\n      setAvailableSkills(parseInt(availableSkills) - 1);\n    }\n  };\n\n  const handleLifeReturn = () => {\n    if (availableSkills < 3 && availableSkills >= 0) {\n      if (playerVitality > 10) {\n        setPlayerVitality(parseInt(playerVitality) - 1);\n        setAvailableSkills(parseInt(availableSkills) + 1);\n      }\n    }\n  };\n\n  const handleAgility = () => {\n    if (availableSkills > 0) {\n      setPlayerAgility(parseInt(playerAgility) + 1);\n      setPlayerDodge(parseInt(playerDodge) + 1);\n      setAvailableSkills(parseInt(availableSkills) - 1);\n    }\n  };\n\n  const handleAgilityReturn = () => {\n    if (availableSkills < 3 && availableSkills >= 0) {\n      if (playerAgility > 0) {\n        setPlayerAgility(parseInt(playerAgility) - 1);\n        setPlayerDodge(parseInt(playerDodge) - 1);\n        setAvailableSkills(parseInt(availableSkills) + 1);\n      }\n    }\n  };\n\n  const handleSpeed = () => {\n    if (availableSkills > 0 && playerSpeed !== 45) {\n      setPlayerSpeed(parseInt(playerSpeed) + 1);\n      setPlayerRawSpeed(parseInt(playerRawSpeed) - 20);\n      setAvailableSkills(parseInt(availableSkills) - 1);\n    }\n  };\n\n  const handleSpeedReturn = () => {\n    if (availableSkills <= 3 && availableSkills >= 0) {\n      if (playerSpeed > 10) {\n        setPlayerSpeed(parseInt(playerSpeed) - 1);\n        setPlayerRawSpeed(parseInt(playerRawSpeed) + 20);\n        setAvailableSkills(parseInt(availableSkills) + 1);\n      }\n    }\n  };\n\n  const handleAccuracy = () => {\n    if (availableSkills > 0) {\n      setPlayerAccuracy(parseInt(playerAccuracy) + 1);\n      setAvailableSkills(parseInt(availableSkills) - 1);\n    }\n  };\n\n  const handleAccuracyReturn = () => {\n    if (availableSkills < 3 && availableSkills >= 0) {\n      if (playerAccuracy > 0) {\n        setPlayerAccuracy(parseInt(playerAccuracy) - 1);\n        setAvailableSkills(parseInt(availableSkills) + 1);\n      }\n    }\n  };\n\n  const handleArmor = () => {\n    if (availableSkills > 0) {\n      setPlayerArmor(parseInt(playerArmor) + 1);\n      setAvailableSkills(parseInt(availableSkills) - 1);\n    }\n  };\n\n  const handleArmorReturn = () => {\n    if (availableSkills < 3 && availableSkills >= 0) {\n      if (playerArmor > 0) {\n        setPlayerArmor(parseInt(playerArmor) - 1);\n        setAvailableSkills(parseInt(availableSkills) + 1);\n      }\n    }\n  };\n\n  const goNextStage = () => {\n    setMonsterLvl(parseInt(monsterLvl) + 1);\n    setTimeout(() => {\n      history.push(\"/nextstage\");\n    }, 100);\n  };\n\n  return (\n    <div className=\"PlayerSkills\">\n      <div className=\"skills-container\">\n        <p>You gain a New Level!</p>\n        <p>\n          You have <span className=\"skills-avaliable\">{availableSkills}</span>{\" \"}\n          skills avaliable{\" \"}\n        </p>\n        <div className=\"skills-box\">\n          <div>\n            <span>Strength: </span>\n            <span> {playerAttack}</span>\n            <span>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleAttackReturn()}\n              >\n                -\n              </button>\n              <button className=\"btn-add-points\" onClick={() => handleAttack()}>\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"skills-explain\">Your attack points.</div>\n          <div>\n            <span>Vitality: </span>\n            <span>{playerVitality}</span>\n            <span>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleLifeReturn()}\n              >\n                -\n              </button>\n              <button className=\"btn-add-points\" onClick={() => handleLife()}>\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"skills-explain\">\n            Your vitality points. 1 point - 10 lifes.\n          </div>\n          <div>\n            <span>Agility: </span>\n            <span>{playerAgility}</span>\n            <span>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleAgilityReturn()}\n              >\n                -\n              </button>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleAgility()}\n              >\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"skills-explain\">Your doge chance.</div>\n          <div>\n            <span>Speed: </span>\n            <span>\n              {\" \"}\n              {playerSpeed < 45 ? playerSpeed : playerSpeed + \" (max)\"}\n            </span>\n            <span>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleSpeedReturn()}\n              >\n                -\n              </button>\n              <button\n                className={`btn-add-points ${\n                  playerSpeed < 45 ? \"\" : \"block-button\"\n                }`}\n                onClick={() => handleSpeed()}\n              >\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"skills-explain\">\n            Your speed. More speed - faster attacks.\n          </div>\n          <div>\n            <span>Accuracy: </span>\n            <span>{playerAccuracy}</span>\n            <span>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleAccuracyReturn()}\n              >\n                -\n              </button>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleAccuracy()}\n              >\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"skills-explain\">Counter the agility skill.</div>\n          <div>\n            <span>Armor: </span>\n            <span>{playerArmor}</span>\n            <span>\n              <button\n                className=\"btn-add-points\"\n                onClick={() => handleArmorReturn()}\n              >\n                -\n              </button>\n              <button className=\"btn-add-points\" onClick={() => handleArmor()}>\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"skills-explain\">\n            Counter the strength skill. But min damage recived - 1.\n          </div>\n          <div\n            className={`next-stage-btn ${\n              availableSkills === 0 ? \"next-stage-active\" : \"\"\n            }`}\n          >\n            <button onClick={() => goNextStage()}>next stage</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerSkills;\n","C:\\personal\\my-projects\\endless-tower\\src\\components\\NextStage.js",["59","60"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction NextStage() {\n  const [stageFloor, setStageFloor] = useState(\n    parseInt(localStorage.getItem(\"monsterLvl\")) + 1\n  );\n  let history = useHistory();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      history.push(\"/game\");\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"NextStage\">\n      <p>Stage {stageFloor}</p>\n    </div>\n  );\n}\n\nexport default NextStage;\n","C:\\personal\\my-projects\\endless-tower\\src\\data\\monsters.js",[],"C:\\personal\\my-projects\\endless-tower\\src\\components\\PlayerAttributesStorage.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":99,"column":6,"nodeType":"67","endLine":99,"endColumn":48,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":125,"column":6,"nodeType":"67","endLine":125,"endColumn":45,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"71","line":128,"column":3,"nodeType":"72","endLine":128,"endColumn":12,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":129,"column":49,"nodeType":"76","endLine":129,"endColumn":64},{"ruleId":"74","severity":1,"message":"75","line":136,"column":55,"nodeType":"76","endLine":136,"endColumn":70},{"ruleId":"77","severity":1,"message":"78","line":1,"column":27,"nodeType":"72","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"80","line":47,"column":10,"nodeType":"72","messageId":"79","endLine":47,"endColumn":24},{"ruleId":"77","severity":1,"message":"81","line":47,"column":26,"nodeType":"72","messageId":"79","endLine":47,"endColumn":43},{"ruleId":"77","severity":1,"message":"82","line":5,"column":22,"nodeType":"72","messageId":"79","endLine":5,"endColumn":35},{"ruleId":"65","severity":1,"message":"83","line":15,"column":6,"nodeType":"67","endLine":15,"endColumn":8,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'calculateMonsterDodgechance', 'monsterLife', 'playerAttack', and 'playerSpeed'. Either include them or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'calculatePlayerDodgechance', 'monsterAttack', 'monsterSpeed', and 'playerLife'. Either include them or remove the dependency array.",["88"],"React Hook useEffect contains a call to 'setStart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [monsterLife, playerLife] as a second argument to the useEffect Hook.","Identifier",["89"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'nextStageDelay' is assigned a value but never used.","'setNextStageDelay' is assigned a value but never used.","'setStageFloor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [start, monsteerDodgeChance, monsterArmor, monsterLife, playerSpeed, calculateMonsterDodgechance, playerAttack]",{"range":"99","text":"100"},"Update the dependencies array to be: [start, playerDodgeChance, playerArmor, monsterSpeed, calculatePlayerDodgechance, monsterAttack, playerLife]",{"range":"101","text":"102"},"Add dependencies array: [monsterLife, playerLife]",{"range":"103","text":"104"},"Update the dependencies array to be: [history]",{"range":"105","text":"106"},[3802,3844],"[start, monsteerDodgeChance, monsterArmor, monsterLife, playerSpeed, calculateMonsterDodgechance, playerAttack]",[4706,4745],"[start, playerDodgeChance, playerArmor, monsterSpeed, calculatePlayerDodgechance, monsterAttack, playerLife]",[4864,4864],", [monsterLife, playerLife]",[403,405],"[history]"]