{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\personal\\\\my-projects\\\\endless-tower\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\nimport monsters from \"../data/monsters\";\n\nfunction Game() {\n  _s();\n\n  const playerData = [{\n    id: 1,\n    life: 100,\n    attack: 2,\n    speed: 0,\n    dodge: 0,\n    accuracy: 1,\n    armor: 0\n  }];\n  const [monsterLife, setMonsterLife] = useState(monsters[0].life);\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\n  const [monsterAttack, setMonsterAttack] = useState(monsters[0].attack);\n  const [monsterAttackAmount, setMonsterAttackAmount] = useState();\n  const [monsterArmor, setMonsterArmor] = useState(monsters[0].armor);\n  const [monsterAccuracity, setMonsterAccuracity] = useState(monsters[0].accuracy);\n  const [start, setStart] = useState(false);\n  const [playerAttack, setPlayerAttack] = useState(playerData[0].attack);\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\n  const [playerLife, setPlayerLife] = useState(playerData[0].life);\n  const [playerArmor, setPlayerArmor] = useState(playerData[0].armor);\n\n  const calculateMonsterDodgechance = () => {\n    let playerAccuracity = playerData[0].accuracy;\n    let monsterDodge = monsters[0].dodge;\n    let checkDifference;\n\n    if (playerAccuracity < monsterDodge) {\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\n    } else {\n      checkDifference = 1;\n    }\n\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\n    setMonsteerDodgeChance(dodgeChance);\n  };\n\n  const calculatePlayerDodgechance = () => {\n    let monsterAccuracity = monsters[0].accuracy;\n    let playerDodge = playerData[0].dodge;\n    let checkDifferencePlayer;\n\n    if (monsterAccuracity < playerDodge) {\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\n    } else {\n      checkDifferencePlayer = 1;\n    }\n\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\n    setPlayerDodgeChance(dodgeChancePlayer);\n  };\n\n  const calculateMonsterArmor = () => {\n    let monsterArmorProtection = playerData[0].accuracy;\n  };\n\n  console.log(\"player\" + playerDodgeChance);\n  console.log(\"monster attack \" + monsterAttack);\n  console.log(\"player doodge\" + playerDodgeChance);\n  console.log(\"player life\" + playerLife);\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        calculateMonsterDodgechance();\n        calculatePlayerDodgechance(); //monster doodge change calc\n\n        if (monsteerDodgeChance === 0) {\n          setMonsterLife(monsterLife => monsterLife - playerAttack);\n          setPlayerAttackAmount(playerData[0].attack);\n        } //player doodge change calc\n\n\n        if (playerDodgeChance === 0) {\n          setPlayerLife(playerLife => playerLife - monsterAttack);\n          setMonsterAttackAmount(monsters[0].attack);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    } else {}\n  }, [start, monsteerDodgeChance, playerDodgeChance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fractalMonster\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerAttackAmount\",\n          children: monsteerDodgeChance === 0 ? playerAttackAmount : monsteerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterLifebar\",\n        style: {\n          width: monsterLife + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: monsterLife\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `startButton  ${start ? \"displayNone\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStart(true),\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerAttackAmount\",\n          children: playerDodgeChance === 0 ? monsterAttackAmount : playerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerLifebar\",\n        style: {\n          width: playerLife + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: playerLife\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"TrqqsTW90gdkv0lqdeFuWIK2fkQ=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/personal/my-projects/endless-tower/src/components/Game.js"],"names":["React","useState","useEffect","Neptune","monsters","Game","playerData","id","life","attack","speed","dodge","accuracy","armor","monsterLife","setMonsterLife","monsteerDodgeChance","setMonsteerDodgeChance","monsterAttack","setMonsterAttack","monsterAttackAmount","setMonsterAttackAmount","monsterArmor","setMonsterArmor","monsterAccuracity","setMonsterAccuracity","start","setStart","playerAttack","setPlayerAttack","playerAttackAmount","setPlayerAttackAmount","playerDodgeChance","setPlayerDodgeChance","playerLife","setPlayerLife","playerArmor","setPlayerArmor","calculateMonsterDodgechance","playerAccuracity","monsterDodge","checkDifference","Math","abs","dodgeChance","floor","random","calculatePlayerDodgechance","playerDodge","checkDifferencePlayer","dodgeChancePlayer","calculateMonsterArmor","monsterArmorProtection","console","log","interval","setInterval","clearInterval","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\r\nimport monsters from \"../data/monsters\";\r\n\r\nfunction Game() {\r\n  const playerData = [\r\n    {\r\n      id: 1,\r\n      life: 100,\r\n      attack: 2,\r\n      speed: 0,\r\n      dodge: 0,\r\n      accuracy: 1,\r\n      armor: 0,\r\n    },\r\n  ];\r\n  const [monsterLife, setMonsterLife] = useState(monsters[0].life);\r\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\r\n  const [monsterAttack, setMonsterAttack] = useState(monsters[0].attack);\r\n  const [monsterAttackAmount, setMonsterAttackAmount] = useState();\r\n  const [monsterArmor, setMonsterArmor] = useState(monsters[0].armor);\r\n  const [monsterAccuracity, setMonsterAccuracity] = useState(\r\n    monsters[0].accuracy\r\n  );\r\n\r\n  const [start, setStart] = useState(false);\r\n\r\n  const [playerAttack, setPlayerAttack] = useState(playerData[0].attack);\r\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\r\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\r\n  const [playerLife, setPlayerLife] = useState(playerData[0].life);\r\n  const [playerArmor, setPlayerArmor] = useState(playerData[0].armor);\r\n\r\n  const calculateMonsterDodgechance = () => {\r\n    let playerAccuracity = playerData[0].accuracy;\r\n    let monsterDodge = monsters[0].dodge;\r\n    let checkDifference;\r\n    if (playerAccuracity < monsterDodge) {\r\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\r\n    } else {\r\n      checkDifference = 1;\r\n    }\r\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\r\n    setMonsteerDodgeChance(dodgeChance);\r\n  };\r\n  const calculatePlayerDodgechance = () => {\r\n    let monsterAccuracity = monsters[0].accuracy;\r\n    let playerDodge = playerData[0].dodge;\r\n    let checkDifferencePlayer;\r\n    if (monsterAccuracity < playerDodge) {\r\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\r\n    } else {\r\n      checkDifferencePlayer = 1;\r\n    }\r\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\r\n    setPlayerDodgeChance(dodgeChancePlayer);\r\n  };\r\n  const calculateMonsterArmor = () => {\r\n    let monsterArmorProtection = playerData[0].accuracy;\r\n  };\r\n  console.log(\"player\" + playerDodgeChance);\r\n  console.log(\"monster attack \" + monsterAttack);\r\n  console.log(\"player doodge\" + playerDodgeChance);\r\n  console.log(\"player life\" + playerLife);\r\n  useEffect(() => {\r\n    if (start) {\r\n      const interval = setInterval(() => {\r\n        calculateMonsterDodgechance();\r\n        calculatePlayerDodgechance();\r\n\r\n        //monster doodge change calc\r\n        if (monsteerDodgeChance === 0) {\r\n          setMonsterLife((monsterLife) => monsterLife - playerAttack);\r\n          setPlayerAttackAmount(playerData[0].attack);\r\n        }\r\n        //player doodge change calc\r\n        if (playerDodgeChance === 0) {\r\n          setPlayerLife((playerLife) => playerLife - monsterAttack);\r\n          setMonsterAttackAmount(monsters[0].attack);\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n    }\r\n  }, [start, monsteerDodgeChance, playerDodgeChance]);\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"fractalMonster\">\r\n        <div className=\"monsterAvatar\">\r\n          <img src={Neptune} alt=\"\" />\r\n          <div className=\"playerAttackAmount\">\r\n            {monsteerDodgeChance === 0\r\n              ? playerAttackAmount\r\n              : monsteerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"monsterLifebar\"\r\n          style={{ width: monsterLife + \"%\" }}\r\n        ></div>\r\n        <p>{monsterLife}</p>\r\n      </div>\r\n      <div className={`startButton  ${start ? \"displayNone\" : \"\"}`}>\r\n        <button onClick={() => setStart(true)}>start</button>\r\n      </div>\r\n      <div className=\"player\">\r\n        <div className=\"playerAvatar\">\r\n          <img src={Neptune} alt=\"\" />\r\n          <div className=\"playerAttackAmount\">\r\n            {playerDodgeChance === 0\r\n              ? monsterAttackAmount\r\n              : playerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"playerLifebar\"\r\n          style={{ width: playerLife + \"%\" }}\r\n        ></div>\r\n        <p>{playerLife}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}