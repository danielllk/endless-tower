{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\personal\\\\my-projects\\\\endless-tower\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\nimport monsters from \"../data/monsters\";\nimport { useHistory } from \"react-router-dom\";\nimport { PlayerAttributesStorage } from \"./PlayerAttributesStorage\";\n\nfunction Game() {\n  _s();\n\n  /*const playerInitialData = [\r\n    {\r\n      id: 1,\r\n      life: 100,\r\n      attack: 3,\r\n      speed: 1000,\r\n      dodge: 0,\r\n      accuracy: 0,\r\n      armor: 0,\r\n      vitality: 100,\r\n    },\r\n  ];*/\n  //Monster Attributes\n  const [monsterLvl] = PlayerAttributesStorage(\"monsterLvl\", \"0\");\n  const [monsterLife, setMonsterLife] = useState(monsters[monsterLvl].life);\n  const [monsterLifePercentage, setMonsterLifePercentage] = useState(100);\n  const [monsterDodge, setMonsterDodge] = useState(monsters[monsterLvl].dodge);\n  const [monsterSpeed, setMonsterSpeed] = useState(monsters[monsterLvl].speed);\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\n  const [monsterAttack, setMonsterAttack] = useState(monsters[monsterLvl].attack);\n  const [monsterAttackAmount, setMonsterAttackAmount] = useState();\n  const [monsterArmor, setMonsterArmor] = useState(monsters[monsterLvl].armor);\n  const [monsterAccuracity, setMonsterAccuracity] = useState(monsters[monsterLvl].accuracy); //Player Attributes\n\n  const [playerAttack, setPlayerAttack] = PlayerAttributesStorage(\"attack\", \"2\");\n  console.log(localStorage);\n  const [playerSpeed] = PlayerAttributesStorage(\"speed\", \"1000\");\n  const [playerLife, setPlayerLife] = PlayerAttributesStorage(\"life\", \"100\");\n  const [playerArmor] = PlayerAttributesStorage(\"armor\", \"0\");\n  const [playerDodge] = PlayerAttributesStorage(\"dodge\", \"0\");\n  const [playerAccuracity] = PlayerAttributesStorage(\"accuracity\", \"0\");\n  const [playerLifePercentage, setPlayerLifePercentage] = useState(100);\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\n  const [playerDodgeChance, setPlayerDodgeChance] = useState(); //Start the Game\n\n  const [start, setStart] = useState(false);\n  let history = useHistory(); //Calculate monster doodge\n\n  const calculateMonsterDodgechance = () => {\n    let checkDifference;\n\n    if (playerAccuracity < monsterDodge) {\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\n    } else {\n      checkDifference = 1;\n    }\n\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\n    setMonsteerDodgeChance(dodgeChance);\n  }; //Calculate player doodge\n\n\n  const calculatePlayerDodgechance = () => {\n    let checkDifferencePlayer;\n\n    if (monsterAccuracity < playerDodge) {\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\n    } else {\n      checkDifferencePlayer = 1;\n    }\n\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\n    setPlayerDodgeChance(dodgeChancePlayer);\n  };\n\n  console.log(\"player\" + playerDodgeChance);\n  console.log(\"monster attack \" + monsterAttack);\n  console.log(\"player doodge\" + playerDodgeChance);\n  console.log(\"player life\" + playerLife); //Calculate damage to monster\n\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        calculateMonsterDodgechance(); //monster doodge change calc\n\n        if (monsteerDodgeChance === 0) {\n          //monster armor calc\n          let armorCalc = Math.abs(monsterArmor > playerAttack ? 2 : monsterArmor - playerAttack);\n          setMonsterLife(monsterLife => monsterLife - armorCalc); //calc life percentage\n\n          let calcPercPlayerAttack = playerAttack / monsterLife * 100;\n          setMonsterLifePercentage(monsterLifePercentage => monsterLifePercentage - calcPercPlayerAttack);\n          setPlayerAttackAmount(armorCalc);\n        }\n      }, monsterLife > 0 ? playerSpeed : null);\n      return () => clearInterval(interval);\n    } else {}\n  }, [start, monsteerDodgeChance, monsterArmor]); //Calculate damage to player\n\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        calculatePlayerDodgechance(); //player doodge change calc\n\n        if (playerDodgeChance === 0) {\n          //player armor calc\n          let playerArmorCalc = Math.abs(playerArmor > monsterAttack ? 2 : playerArmor - monsterAttack);\n          setPlayerLife(playerLife => playerLife - playerArmorCalc); //calc life percentage\n\n          let calcPerMonsterAttack = monsterAttack / playerLife * 100;\n          setPlayerLifePercentage(playerLifePercentage => playerLifePercentage - calcPerMonsterAttack);\n          setMonsterAttackAmount(playerArmorCalc);\n        }\n      }, monsterSpeed);\n      return () => clearInterval(interval);\n    } else {}\n  }, [start, playerDodgeChance, playerArmor]); //Stop Interval\n\n  useEffect(() => {\n    if (monsterLife < 0 || playerLife < 0) {\n      setStart(false);\n    }\n  });\n  console.log(monsterLifePercentage);\n\n  function goToNextFloor() {\n    history.push(\"/playerskills\");\n    localStorage.setItem(\"life\", \"Smith\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fractalMonster\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          className: monsterLife < 0 ? \"defeated\" : \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `playerAttackAmount ${monsterLife < 0 || playerLife < 0 ? \"opacityNone\" : \"\"} ${monsteerDodgeChance > 0 ? \"backBlue\" : \"backRed\"}`,\n          style: {\n            animationDuration: `${playerSpeed * 0.001}s`\n          },\n          children: monsteerDodgeChance === 0 ? playerAttackAmount ? \"-\" + playerAttackAmount : \"\" : monsteerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `deadStateBannerMonster ${monsterLife > 0 ? \"displayNone\" : \"\"}`,\n          children: \"DEFEATED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerMonsterLifebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monsterLifebar\",\n          style: {\n            width: (monsterLife > 0 ? monsterLifePercentage : 0) + \"%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: monsterLife > 0 ? monsterLife : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `startButton  ${start || monsterLife <= 0 || playerLife <= 0 ? \"displayNone\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStart(true),\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `playerDefeated ${playerLife <= 0 ? \"displayEndButton\" : \"displayNone\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStart(true),\n        children: \"End Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `playerDefeated ${monsterLife <= 0 ? \"displayEndButton\" : \"displayNone\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Victory!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToNextFloor(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          alt: \"\",\n          className: playerLife < 0 ? \"defeated\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `monsterAttackAmount ${monsterLife < 0 || playerLife < 0 ? \"opacityNone\" : \"\"} ${playerDodgeChance > 0 ? \"backBlue\" : \"backRed\"}`,\n          style: {\n            animationDuration: `${monsterSpeed * 0.001}s`\n          },\n          children: playerDodgeChance === 0 && playerAttackAmount !== \"undefined\" ? monsterAttackAmount ? \"-\" + monsterAttackAmount : \"\" : playerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `deadStateBannerPlayer ${playerLife > 0 ? \"displayNone\" : \"\"}`,\n          children: \"DEFEATED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerPlayerLifebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerLifebar\",\n          style: {\n            width: (playerLife > 0 ? playerLifePercentage : 0) + \"%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: playerLife > 0 ? playerLife : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"2JZFK5rMZYBt05P5ckv264U8Q8k=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/personal/my-projects/endless-tower/src/components/Game.js"],"names":["React","useState","useEffect","Neptune","monsters","useHistory","PlayerAttributesStorage","Game","monsterLvl","monsterLife","setMonsterLife","life","monsterLifePercentage","setMonsterLifePercentage","monsterDodge","setMonsterDodge","dodge","monsterSpeed","setMonsterSpeed","speed","monsteerDodgeChance","setMonsteerDodgeChance","monsterAttack","setMonsterAttack","attack","monsterAttackAmount","setMonsterAttackAmount","monsterArmor","setMonsterArmor","armor","monsterAccuracity","setMonsterAccuracity","accuracy","playerAttack","setPlayerAttack","console","log","localStorage","playerSpeed","playerLife","setPlayerLife","playerArmor","playerDodge","playerAccuracity","playerLifePercentage","setPlayerLifePercentage","playerAttackAmount","setPlayerAttackAmount","playerDodgeChance","setPlayerDodgeChance","start","setStart","history","calculateMonsterDodgechance","checkDifference","Math","abs","dodgeChance","floor","random","calculatePlayerDodgechance","checkDifferencePlayer","dodgeChancePlayer","interval","setInterval","armorCalc","calcPercPlayerAttack","clearInterval","playerArmorCalc","calcPerMonsterAttack","goToNextFloor","push","setItem","animationDuration","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\r\nimport monsters from \"../data/monsters\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PlayerAttributesStorage } from \"./PlayerAttributesStorage\";\r\n\r\nfunction Game() {\r\n  /*const playerInitialData = [\r\n    {\r\n      id: 1,\r\n      life: 100,\r\n      attack: 3,\r\n      speed: 1000,\r\n      dodge: 0,\r\n      accuracy: 0,\r\n      armor: 0,\r\n      vitality: 100,\r\n    },\r\n  ];*/\r\n\r\n  //Monster Attributes\r\n  const [monsterLvl] = PlayerAttributesStorage(\"monsterLvl\", \"0\");\r\n  const [monsterLife, setMonsterLife] = useState(monsters[monsterLvl].life);\r\n  const [monsterLifePercentage, setMonsterLifePercentage] = useState(100);\r\n  const [monsterDodge, setMonsterDodge] = useState(monsters[monsterLvl].dodge);\r\n  const [monsterSpeed, setMonsterSpeed] = useState(monsters[monsterLvl].speed);\r\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\r\n  const [monsterAttack, setMonsterAttack] = useState(\r\n    monsters[monsterLvl].attack\r\n  );\r\n  const [monsterAttackAmount, setMonsterAttackAmount] = useState();\r\n  const [monsterArmor, setMonsterArmor] = useState(monsters[monsterLvl].armor);\r\n  const [monsterAccuracity, setMonsterAccuracity] = useState(\r\n    monsters[monsterLvl].accuracy\r\n  );\r\n\r\n  //Player Attributes\r\n  const [playerAttack, setPlayerAttack] = PlayerAttributesStorage(\r\n    \"attack\",\r\n    \"2\"\r\n  );\r\n  console.log(localStorage);\r\n  const [playerSpeed] = PlayerAttributesStorage(\"speed\", \"1000\");\r\n  const [playerLife, setPlayerLife] = PlayerAttributesStorage(\"life\", \"100\");\r\n  const [playerArmor] = PlayerAttributesStorage(\"armor\", \"0\");\r\n  const [playerDodge] = PlayerAttributesStorage(\"dodge\", \"0\");\r\n  const [playerAccuracity] = PlayerAttributesStorage(\"accuracity\", \"0\");\r\n\r\n  const [playerLifePercentage, setPlayerLifePercentage] = useState(100);\r\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\r\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\r\n\r\n  //Start the Game\r\n  const [start, setStart] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  //Calculate monster doodge\r\n  const calculateMonsterDodgechance = () => {\r\n    let checkDifference;\r\n    if (playerAccuracity < monsterDodge) {\r\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\r\n    } else {\r\n      checkDifference = 1;\r\n    }\r\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\r\n    setMonsteerDodgeChance(dodgeChance);\r\n  };\r\n  //Calculate player doodge\r\n  const calculatePlayerDodgechance = () => {\r\n    let checkDifferencePlayer;\r\n    if (monsterAccuracity < playerDodge) {\r\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\r\n    } else {\r\n      checkDifferencePlayer = 1;\r\n    }\r\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\r\n    setPlayerDodgeChance(dodgeChancePlayer);\r\n  };\r\n\r\n  console.log(\"player\" + playerDodgeChance);\r\n  console.log(\"monster attack \" + monsterAttack);\r\n  console.log(\"player doodge\" + playerDodgeChance);\r\n  console.log(\"player life\" + playerLife);\r\n\r\n  //Calculate damage to monster\r\n  useEffect(() => {\r\n    if (start) {\r\n      const interval = setInterval(\r\n        () => {\r\n          calculateMonsterDodgechance();\r\n\r\n          //monster doodge change calc\r\n          if (monsteerDodgeChance === 0) {\r\n            //monster armor calc\r\n            let armorCalc = Math.abs(\r\n              monsterArmor > playerAttack ? 2 : monsterArmor - playerAttack\r\n            );\r\n\r\n            setMonsterLife((monsterLife) => monsterLife - armorCalc);\r\n            //calc life percentage\r\n            let calcPercPlayerAttack = (playerAttack / monsterLife) * 100;\r\n            setMonsterLifePercentage(\r\n              (monsterLifePercentage) =>\r\n                monsterLifePercentage - calcPercPlayerAttack\r\n            );\r\n            setPlayerAttackAmount(armorCalc);\r\n          }\r\n        },\r\n        monsterLife > 0 ? playerSpeed : null\r\n      );\r\n      return () => clearInterval(interval);\r\n    } else {\r\n    }\r\n  }, [start, monsteerDodgeChance, monsterArmor]);\r\n\r\n  //Calculate damage to player\r\n  useEffect(() => {\r\n    if (start) {\r\n      const interval = setInterval(() => {\r\n        calculatePlayerDodgechance();\r\n        //player doodge change calc\r\n        if (playerDodgeChance === 0) {\r\n          //player armor calc\r\n          let playerArmorCalc = Math.abs(\r\n            playerArmor > monsterAttack ? 2 : playerArmor - monsterAttack\r\n          );\r\n          setPlayerLife((playerLife) => playerLife - playerArmorCalc);\r\n          //calc life percentage\r\n          let calcPerMonsterAttack = (monsterAttack / playerLife) * 100;\r\n          setPlayerLifePercentage(\r\n            (playerLifePercentage) =>\r\n              playerLifePercentage - calcPerMonsterAttack\r\n          );\r\n          setMonsterAttackAmount(playerArmorCalc);\r\n        }\r\n      }, monsterSpeed);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n    }\r\n  }, [start, playerDodgeChance, playerArmor]);\r\n\r\n  //Stop Interval\r\n  useEffect(() => {\r\n    if (monsterLife < 0 || playerLife < 0) {\r\n      setStart(false);\r\n    }\r\n  });\r\n\r\n  console.log(monsterLifePercentage);\r\n\r\n  function goToNextFloor() {\r\n    history.push(\"/playerskills\");\r\n    localStorage.setItem(\"life\", \"Smith\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"fractalMonster\">\r\n        <div className=\"monsterAvatar\">\r\n          <img\r\n            src={Neptune}\r\n            className={monsterLife < 0 ? \"defeated\" : \"\"}\r\n            alt=\"\"\r\n          />\r\n          <div\r\n            className={`playerAttackAmount ${\r\n              monsterLife < 0 || playerLife < 0 ? \"opacityNone\" : \"\"\r\n            } ${monsteerDodgeChance > 0 ? \"backBlue\" : \"backRed\"}`}\r\n            style={{ animationDuration: `${playerSpeed * 0.001}s` }}\r\n          >\r\n            {monsteerDodgeChance === 0\r\n              ? playerAttackAmount\r\n                ? \"-\" + playerAttackAmount\r\n                : \"\"\r\n              : monsteerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n          <div\r\n            className={`deadStateBannerMonster ${\r\n              monsterLife > 0 ? \"displayNone\" : \"\"\r\n            }`}\r\n          >\r\n            DEFEATED\r\n          </div>\r\n        </div>\r\n        <div className=\"innerMonsterLifebar\">\r\n          <div\r\n            className=\"monsterLifebar\"\r\n            style={{\r\n              width: (monsterLife > 0 ? monsterLifePercentage : 0) + \"%\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <p>{monsterLife > 0 ? monsterLife : 0}</p>\r\n      </div>\r\n      <div\r\n        className={`startButton  ${\r\n          start || monsterLife <= 0 || playerLife <= 0 ? \"displayNone\" : \"\"\r\n        }`}\r\n      >\r\n        <button onClick={() => setStart(true)}>start</button>\r\n      </div>\r\n      <div\r\n        className={`playerDefeated ${\r\n          playerLife <= 0 ? \"displayEndButton\" : \"displayNone\"\r\n        }`}\r\n      >\r\n        <p>You lost!</p>\r\n        <button onClick={() => setStart(true)}>End Game</button>\r\n      </div>\r\n      <div\r\n        className={`playerDefeated ${\r\n          monsterLife <= 0 ? \"displayEndButton\" : \"displayNone\"\r\n        }`}\r\n      >\r\n        <p>Victory!</p>\r\n        <button onClick={() => goToNextFloor()}>Next</button>\r\n      </div>\r\n      <div className=\"player\">\r\n        <div className=\"playerAvatar\">\r\n          <img\r\n            src={Neptune}\r\n            alt=\"\"\r\n            className={playerLife < 0 ? \"defeated\" : \"\"}\r\n          />\r\n          <div\r\n            className={`monsterAttackAmount ${\r\n              monsterLife < 0 || playerLife < 0 ? \"opacityNone\" : \"\"\r\n            } ${playerDodgeChance > 0 ? \"backBlue\" : \"backRed\"}`}\r\n            style={{ animationDuration: `${monsterSpeed * 0.001}s` }}\r\n          >\r\n            {playerDodgeChance === 0 && playerAttackAmount !== \"undefined\"\r\n              ? monsterAttackAmount\r\n                ? \"-\" + monsterAttackAmount\r\n                : \"\"\r\n              : playerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n          <div\r\n            className={`deadStateBannerPlayer ${\r\n              playerLife > 0 ? \"displayNone\" : \"\"\r\n            }`}\r\n          >\r\n            DEFEATED\r\n          </div>\r\n        </div>\r\n        <div className=\"innerPlayerLifebar\">\r\n          <div\r\n            className=\"playerLifebar\"\r\n            style={{\r\n              width: (playerLife > 0 ? playerLifePercentage : 0) + \"%\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <p>{playerLife > 0 ? playerLife : 0}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}