{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\personal\\\\my-projects\\\\endless-tower\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\nimport monsters from \"../data/monsters\";\n\nfunction Game() {\n  _s();\n\n  const playerData = [{\n    id: 1,\n    life: 100,\n    attack: 2,\n    speed: 1000,\n    dodge: 0,\n    accuracy: 0,\n    armor: 0\n  }];\n  const [monsterLife, setMonsterLife] = useState(monsters[0].life);\n  const [monsterDodge, setMonsterDodge] = useState(monsters[0].dodge);\n  const [monsterSpeed, setMonsterSpeed] = useState(monsters[0].speed);\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\n  const [monsterAttack, setMonsterAttack] = useState(monsters[0].attack);\n  const [monsterAttackAmount, setMonsterAttackAmount] = useState();\n  const [monsterArmor, setMonsterArmor] = useState(monsters[0].armor);\n  const [monsterAccuracity, setMonsterAccuracity] = useState(monsters[0].accuracy);\n  const [start, setStart] = useState(false);\n  const [playerAttack, setPlayerAttack] = useState(playerData[0].attack);\n  const [playerSpeed, setPlayerSpeed] = useState(playerData[0].speed);\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\n  const [playerLife, setPlayerLife] = useState(playerData[0].life);\n  const [playerArmor, setPlayerArmor] = useState(playerData[0].armor);\n  const [playerDodge, setPlayerDodge] = useState(playerData[0].dodge);\n  const [playerAccuracity, setPlayerAccuracity] = useState(playerData[0].accuracy);\n\n  const calculateMonsterDodgechance = () => {\n    let checkDifference;\n\n    if (playerAccuracity < monsterDodge) {\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\n    } else {\n      checkDifference = 1;\n    }\n\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\n    setMonsteerDodgeChance(dodgeChance);\n  };\n\n  const calculatePlayerDodgechance = () => {\n    let checkDifferencePlayer;\n\n    if (monsterAccuracity < playerDodge) {\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\n    } else {\n      checkDifferencePlayer = 1;\n    }\n\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\n    setPlayerDodgeChance(dodgeChancePlayer);\n  };\n\n  console.log(\"player\" + playerDodgeChance);\n  console.log(\"monster attack \" + monsterAttack);\n  console.log(\"player doodge\" + playerDodgeChance);\n  console.log(\"player life\" + playerLife);\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        calculateMonsterDodgechance(); //monster doodge change calc\n\n        if (monsteerDodgeChance === 0) {\n          //monster armor calc\n          let armorCalc = Math.abs(monsterArmor > playerAttack ? 0 : monsterArmor - playerAttack);\n          setMonsterLife(monsterLife => monsterLife - armorCalc);\n          setPlayerAttackAmount(armorCalc);\n        }\n      }, playerSpeed);\n      return () => clearInterval(interval);\n    } else {}\n  }, [start, monsteerDodgeChance, monsterArmor]);\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        calculatePlayerDodgechance(); //player doodge change calc\n\n        if (playerDodgeChance === 0) {\n          //player armor calc\n          let playerArmorCalc = Math.abs(playerArmor > monsterAttack ? 0 : playerArmor - monsterAttack);\n          setPlayerLife(playerLife => playerLife - playerArmorCalc);\n          setMonsterAttackAmount(playerArmorCalc);\n        }\n      }, monsterSpeed);\n      return () => clearInterval(interval);\n    } else {}\n  }, [start, playerDodgeChance, playerArmor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fractalMonster\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerAttackAmount\",\n          style: {\n            animationDuration: `${playerSpeed * 0.001}s`\n          },\n          children: monsteerDodgeChance === 0 && playerDodgeChance !== \"undefined\" ? \"-\" + playerAttackAmount : monsteerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monsterLifebar\",\n        style: {\n          width: (monsterLife > 0 ? monsterLife : 0) + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: monsterLife > 0 ? monsterLife : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `startButton  ${start ? \"displayNone\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStart(true),\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerAvatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Neptune,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monsterAttackAmount\",\n          style: {\n            animationDuration: `${monsterSpeed * 0.001}s`\n          },\n          children: playerDodgeChance === 0 && playerDodgeChance !== \"undefined\" ? \"-\" + monsterAttackAmount : playerDodgeChance > 0 ? \"miss\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerLifebar\",\n        style: {\n          width: (playerLife > 0 ? playerLife : 0) + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: playerLife > 0 ? playerLife : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"f4UM6lCrKT6qoaR5Df88pAv/ju0=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/personal/my-projects/endless-tower/src/components/Game.js"],"names":["React","useState","useEffect","Neptune","monsters","Game","playerData","id","life","attack","speed","dodge","accuracy","armor","monsterLife","setMonsterLife","monsterDodge","setMonsterDodge","monsterSpeed","setMonsterSpeed","monsteerDodgeChance","setMonsteerDodgeChance","monsterAttack","setMonsterAttack","monsterAttackAmount","setMonsterAttackAmount","monsterArmor","setMonsterArmor","monsterAccuracity","setMonsterAccuracity","start","setStart","playerAttack","setPlayerAttack","playerSpeed","setPlayerSpeed","playerAttackAmount","setPlayerAttackAmount","playerDodgeChance","setPlayerDodgeChance","playerLife","setPlayerLife","playerArmor","setPlayerArmor","playerDodge","setPlayerDodge","playerAccuracity","setPlayerAccuracity","calculateMonsterDodgechance","checkDifference","Math","abs","dodgeChance","floor","random","calculatePlayerDodgechance","checkDifferencePlayer","dodgeChancePlayer","console","log","interval","setInterval","armorCalc","clearInterval","playerArmorCalc","animationDuration","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Neptune from \"../assets/img/monstersAvatars/Neptune.png\";\r\nimport monsters from \"../data/monsters\";\r\n\r\nfunction Game() {\r\n  const playerData = [\r\n    {\r\n      id: 1,\r\n      life: 100,\r\n      attack: 2,\r\n      speed: 1000,\r\n      dodge: 0,\r\n      accuracy: 0,\r\n      armor: 0,\r\n    },\r\n  ];\r\n  const [monsterLife, setMonsterLife] = useState(monsters[0].life);\r\n  const [monsterDodge, setMonsterDodge] = useState(monsters[0].dodge);\r\n  const [monsterSpeed, setMonsterSpeed] = useState(monsters[0].speed);\r\n  const [monsteerDodgeChance, setMonsteerDodgeChance] = useState();\r\n  const [monsterAttack, setMonsterAttack] = useState(monsters[0].attack);\r\n  const [monsterAttackAmount, setMonsterAttackAmount] = useState();\r\n  const [monsterArmor, setMonsterArmor] = useState(monsters[0].armor);\r\n  const [monsterAccuracity, setMonsterAccuracity] = useState(\r\n    monsters[0].accuracy\r\n  );\r\n\r\n  const [start, setStart] = useState(false);\r\n\r\n  const [playerAttack, setPlayerAttack] = useState(playerData[0].attack);\r\n  const [playerSpeed, setPlayerSpeed] = useState(playerData[0].speed);\r\n  const [playerAttackAmount, setPlayerAttackAmount] = useState();\r\n  const [playerDodgeChance, setPlayerDodgeChance] = useState();\r\n  const [playerLife, setPlayerLife] = useState(playerData[0].life);\r\n  const [playerArmor, setPlayerArmor] = useState(playerData[0].armor);\r\n  const [playerDodge, setPlayerDodge] = useState(playerData[0].dodge);\r\n  const [playerAccuracity, setPlayerAccuracity] = useState(\r\n    playerData[0].accuracy\r\n  );\r\n\r\n  const calculateMonsterDodgechance = () => {\r\n    let checkDifference;\r\n    if (playerAccuracity < monsterDodge) {\r\n      checkDifference = Math.abs(playerAccuracity - monsterDodge);\r\n    } else {\r\n      checkDifference = 1;\r\n    }\r\n    let dodgeChance = Math.floor(Math.random() * checkDifference);\r\n    setMonsteerDodgeChance(dodgeChance);\r\n  };\r\n  const calculatePlayerDodgechance = () => {\r\n    let checkDifferencePlayer;\r\n    if (monsterAccuracity < playerDodge) {\r\n      checkDifferencePlayer = Math.abs(monsterAccuracity - playerDodge);\r\n    } else {\r\n      checkDifferencePlayer = 1;\r\n    }\r\n    let dodgeChancePlayer = Math.floor(Math.random() * checkDifferencePlayer);\r\n    setPlayerDodgeChance(dodgeChancePlayer);\r\n  };\r\n\r\n  console.log(\"player\" + playerDodgeChance);\r\n  console.log(\"monster attack \" + monsterAttack);\r\n  console.log(\"player doodge\" + playerDodgeChance);\r\n  console.log(\"player life\" + playerLife);\r\n  useEffect(() => {\r\n    if (start) {\r\n      const interval = setInterval(() => {\r\n        calculateMonsterDodgechance();\r\n\r\n        //monster doodge change calc\r\n        if (monsteerDodgeChance === 0) {\r\n          //monster armor calc\r\n          let armorCalc = Math.abs(\r\n            monsterArmor > playerAttack ? 0 : monsterArmor - playerAttack\r\n          );\r\n\r\n          setMonsterLife((monsterLife) => monsterLife - armorCalc);\r\n          setPlayerAttackAmount(armorCalc);\r\n        }\r\n      }, playerSpeed);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n    }\r\n  }, [start, monsteerDodgeChance, monsterArmor]);\r\n\r\n  useEffect(() => {\r\n    if (start) {\r\n      const interval = setInterval(() => {\r\n        calculatePlayerDodgechance();\r\n        //player doodge change calc\r\n        if (playerDodgeChance === 0) {\r\n          //player armor calc\r\n          let playerArmorCalc = Math.abs(\r\n            playerArmor > monsterAttack ? 0 : playerArmor - monsterAttack\r\n          );\r\n          setPlayerLife((playerLife) => playerLife - playerArmorCalc);\r\n          setMonsterAttackAmount(playerArmorCalc);\r\n        }\r\n      }, monsterSpeed);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n    }\r\n  }, [start, playerDodgeChance, playerArmor]);\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"fractalMonster\">\r\n        <div className=\"monsterAvatar\">\r\n          <img src={Neptune} alt=\"\" />\r\n          <div\r\n            className=\"playerAttackAmount\"\r\n            style={{ animationDuration: `${playerSpeed * 0.001}s` }}\r\n          >\r\n            {monsteerDodgeChance === 0 && playerDodgeChance !== \"undefined\"\r\n              ? \"-\" + playerAttackAmount\r\n              : monsteerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"monsterLifebar\"\r\n          style={{ width: (monsterLife > 0 ? monsterLife : 0) + \"%\" }}\r\n        ></div>\r\n        <p>{monsterLife > 0 ? monsterLife : 0}</p>\r\n      </div>\r\n      <div className={`startButton  ${start ? \"displayNone\" : \"\"}`}>\r\n        <button onClick={() => setStart(true)}>start</button>\r\n      </div>\r\n      <div className=\"player\">\r\n        <div className=\"playerAvatar\">\r\n          <img src={Neptune} alt=\"\" />\r\n          <div\r\n            className=\"monsterAttackAmount\"\r\n            style={{ animationDuration: `${monsterSpeed * 0.001}s` }}\r\n          >\r\n            {playerDodgeChance === 0 && playerDodgeChance !== \"undefined\"\r\n              ? \"-\" + monsterAttackAmount\r\n              : playerDodgeChance > 0\r\n              ? \"miss\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"playerLifebar\"\r\n          style={{ width: (playerLife > 0 ? playerLife : 0) + \"%\" }}\r\n        ></div>\r\n        <p>{playerLife > 0 ? playerLife : 0}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}